<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="41" passed="28" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-26T13:23:47 IST" name="Suite" finished-at="2022-06-26T13:24:16 IST" duration-ms="28951">
    <groups>
      <group name="POST">
        <method signature="TC003_Post_Employee_Record.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkAllHeaders" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkContentEncoding" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkContentLength" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkContentType" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkResponseBody" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkResponseTime" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkServerType" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkStatusCode" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
        <method signature="TC003_Post_Employee_Record.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" name="checkStatusLine" class="com.employeeapi.testcases.TC003_Post_Employee_Record"/>
      </group> <!-- POST -->
      <group name="GET">
        <method signature="TC001_Get_All_Employees.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkAllHeaders" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkContentEncoding" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkContentLength" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkContentType" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkResponseBody" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkResponseTime" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkServerType" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkStatusCode" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC001_Get_All_Employees.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" name="checkStatusLine" class="com.employeeapi.testcases.TC001_Get_All_Employees"/>
        <method signature="TC002_Get_Single_Employee_Record.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkAllHeaders" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkContentEncoding" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkContentType" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkResponseBody" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkResponseTime" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkServerType" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkStatusCode" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
        <method signature="TC002_Get_Single_Employee_Record.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" name="checkStatusLine" class="com.employeeapi.testcases.TC002_Get_Single_Employee_Record"/>
      </group> <!-- GET -->
      <group name="PUT">
        <method signature="TC004_Put_Employee_Record.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkAllHeaders" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkContentEncoding" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkContentLength" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkContentType" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkResponseBody" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkResponseTime" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkServerType" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkStatusCode" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
        <method signature="TC004_Put_Employee_Record.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" name="checkStatusLine" class="com.employeeapi.testcases.TC004_Put_Employee_Record"/>
      </group> <!-- PUT -->
    </groups>
    <test started-at="2022-06-26T13:23:47 IST" name="Test" finished-at="2022-06-26T13:24:16 IST" duration-ms="28951">
      <class name="com.employeeapi.testcases.TC004_Put_Employee_Record">
        <test-method is-config="true" signature="updateEmployee()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:10 IST" name="updateEmployee" finished-at="2022-06-26T13:24:16 IST" duration-ms="5527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
        <test-method signature="checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkAllHeaders" finished-at="2022-06-26T13:24:16 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllHeaders -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAllHeaders status=SUCCESS method=TC004_Put_Employee_Record.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkContentEncoding" finished-at="2022-06-26T13:24:16 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentEncoding status=SUCCESS method=TC004_Put_Employee_Record.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkContentLength" finished-at="2022-06-26T13:24:16 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
at java.base/java.lang.Integer.parseInt(Integer.java:614)
at java.base/java.lang.Integer.parseInt(Integer.java:770)
at com.employeeapi.testcases.TC004_Put_Employee_Record.checkContentLength(TC004_Put_Employee_Record.java:178)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentLength status=FAILURE method=TC004_Put_Employee_Record.checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkContentType" finished-at="2022-06-26T13:24:16 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentType status=SUCCESS method=TC004_Put_Employee_Record.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkResponseBody" finished-at="2022-06-26T13:24:16 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseBody status=SUCCESS method=TC004_Put_Employee_Record.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkResponseTime" finished-at="2022-06-26T13:24:16 IST" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.employeeapi.testcases.TC004_Put_Employee_Record.checkResponseTime(TC004_Put_Employee_Record.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseTime status=FAILURE method=TC004_Put_Employee_Record.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkServerType" finished-at="2022-06-26T13:24:16 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkServerType status=SUCCESS method=TC004_Put_Employee_Record.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkStatusCode" finished-at="2022-06-26T13:24:16 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusCode status=SUCCESS method=TC004_Put_Employee_Record.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="checkStatusLine" finished-at="2022-06-26T13:24:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusLine status=SUCCESS method=TC004_Put_Employee_Record.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@5f058f00]" started-at="2022-06-26T13:24:16 IST" name="tearDown" finished-at="2022-06-26T13:24:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC004_Put_Employee_Record -->
      <class name="com.employeeapi.testcases.TC002_Get_Single_Employee_Record">
        <test-method is-config="true" signature="getSingleEmployee()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:00 IST" name="getSingleEmployee" finished-at="2022-06-26T13:24:04 IST" duration-ms="3503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleEmployee -->
        <test-method signature="checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkAllHeaders" finished-at="2022-06-26T13:24:04 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllHeaders -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAllHeaders status=SUCCESS method=TC002_Get_Single_Employee_Record.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkContentEncoding" finished-at="2022-06-26T13:24:04 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentEncoding status=SUCCESS method=TC002_Get_Single_Employee_Record.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkContentType" finished-at="2022-06-26T13:24:04 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentType status=SUCCESS method=TC002_Get_Single_Employee_Record.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkResponseBody" finished-at="2022-06-26T13:24:04 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseBody status=SUCCESS method=TC002_Get_Single_Employee_Record.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkResponseTime" finished-at="2022-06-26T13:24:04 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.employeeapi.testcases.TC002_Get_Single_Employee_Record.checkResponseTime(TC002_Get_Single_Employee_Record.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseTime status=FAILURE method=TC002_Get_Single_Employee_Record.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkServerType" finished-at="2022-06-26T13:24:04 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkServerType status=SUCCESS method=TC002_Get_Single_Employee_Record.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkStatusCode" finished-at="2022-06-26T13:24:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusCode status=SUCCESS method=TC002_Get_Single_Employee_Record.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="checkStatusLine" finished-at="2022-06-26T13:24:04 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusLine status=SUCCESS method=TC002_Get_Single_Employee_Record.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC002_Get_Single_Employee_Record@7193666c]" started-at="2022-06-26T13:24:04 IST" name="tearDown" finished-at="2022-06-26T13:24:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC002_Get_Single_Employee_Record -->
      <class name="com.employeeapi.testcases.TC003_Post_Employee_Record">
        <test-method is-config="true" signature="getSingleEmployee()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:04 IST" name="getSingleEmployee" finished-at="2022-06-26T13:24:10 IST" duration-ms="6070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleEmployee -->
        <test-method signature="checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkAllHeaders" finished-at="2022-06-26T13:24:10 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllHeaders -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAllHeaders status=SUCCESS method=TC003_Post_Employee_Record.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkContentEncoding" finished-at="2022-06-26T13:24:10 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [gzip] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [gzip] but found [null]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.employeeapi.testcases.TC003_Post_Employee_Record.checkContentEncoding(TC003_Post_Employee_Record.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentEncoding status=FAILURE method=TC003_Post_Employee_Record.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkContentLength" finished-at="2022-06-26T13:24:10 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentLength status=SUCCESS method=TC003_Post_Employee_Record.checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkContentType" finished-at="2022-06-26T13:24:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentType status=SUCCESS method=TC003_Post_Employee_Record.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkResponseBody" finished-at="2022-06-26T13:24:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseBody status=SUCCESS method=TC003_Post_Employee_Record.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkResponseTime" finished-at="2022-06-26T13:24:10 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.employeeapi.testcases.TC003_Post_Employee_Record.checkResponseTime(TC003_Post_Employee_Record.java:101)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseTime status=FAILURE method=TC003_Post_Employee_Record.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkServerType" finished-at="2022-06-26T13:24:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkServerType status=SUCCESS method=TC003_Post_Employee_Record.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkStatusCode" finished-at="2022-06-26T13:24:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusCode status=SUCCESS method=TC003_Post_Employee_Record.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="checkStatusLine" finished-at="2022-06-26T13:24:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusLine status=SUCCESS method=TC003_Post_Employee_Record.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@55b7a4e0]" started-at="2022-06-26T13:24:10 IST" name="tearDown" finished-at="2022-06-26T13:24:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.testcases.TC003_Post_Employee_Record -->
      <class name="com.employeeapi.testcases.TC001_Get_All_Employees">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:23:46 IST" name="beforeSuite" finished-at="2022-06-26T13:23:47 IST" duration-ms="1210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:23:47 IST" name="getAllEmployees" finished-at="2022-06-26T13:24:00 IST" duration-ms="12540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkAllHeaders" finished-at="2022-06-26T13:24:00 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAllHeaders -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAllHeaders status=SUCCESS method=TC001_Get_All_Employees.checkAllHeaders()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkContentEncoding" finished-at="2022-06-26T13:24:00 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentEncoding status=SUCCESS method=TC001_Get_All_Employees.checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkContentLength" finished-at="2022-06-26T13:24:00 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
at java.base/java.lang.Integer.parseInt(Integer.java:614)
at java.base/java.lang.Integer.parseInt(Integer.java:770)
at com.employeeapi.testcases.TC001_Get_All_Employees.checkContentLength(TC001_Get_All_Employees.java:169)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentLength status=FAILURE method=TC001_Get_All_Employees.checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkContentType" finished-at="2022-06-26T13:24:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentType status=SUCCESS method=TC001_Get_All_Employees.checkContentType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkResponseBody" finished-at="2022-06-26T13:24:00 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseBody status=SUCCESS method=TC001_Get_All_Employees.checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkResponseTime" finished-at="2022-06-26T13:24:00 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.employeeapi.testcases.TC001_Get_All_Employees.checkResponseTime(TC001_Get_All_Employees.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseTime status=FAILURE method=TC001_Get_All_Employees.checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkServerType" finished-at="2022-06-26T13:24:00 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkServerType status=SUCCESS method=TC001_Get_All_Employees.checkServerType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkStatusCode" finished-at="2022-06-26T13:24:00 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusCode status=SUCCESS method=TC001_Get_All_Employees.checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="checkStatusLine" finished-at="2022-06-26T13:24:00 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusLine status=SUCCESS method=TC001_Get_All_Employees.checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:00 IST" name="tearDown" finished-at="2022-06-26T13:24:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@243c4f91]" started-at="2022-06-26T13:24:16 IST" name="afterSuite" finished-at="2022-06-26T13:24:18 IST" duration-ms="1462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.employeeapi.testcases.TC001_Get_All_Employees -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
